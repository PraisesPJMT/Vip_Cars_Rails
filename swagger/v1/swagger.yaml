---
openapi: 3.0.1
info:
  title: VIP Cars API V1
  version: v1
paths:

  "/api/v1/signin":
    post:
      summary: Sign in 
      tags:
      - Sign in 
      parameters: []
      responses:
        '200':
          description: Signed in succesfully
        '401':
          description: Failed in sign in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/logout":
    delete:
      summary: Sign out 
      tags:
      - Sign out 
      parameters:
      - name: Authorization
        in: header
        description: Authorization JWT Token
        schema:
          type: string
      responses:
        '200':
          description: Logged out successfull
        '401':
          description: Invalid authorization token
  "/api/v1/signup":
    post:
      summary: Sign Up
      tags:
      - Sign Up
      parameters: []
      responses:
        '200':
          description:  Signed up successfully
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/users/":
    get:
      summary: Show Current User
      tags:
      - Current User
      responses:
        '200':
          description: Current User 
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                required:
                - id
                - name
                - email
        '401':
          description: You must Login or Register.

  "/api/v1/cars/":
    get:
      summary: List all cars
      tags:
      - All Cars
      responses:
        '200':
          description: List of all cars found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    image:
                      type: string
                    model:
                      type: string
                    price:
                      type: integer
                    description:
                      type: string
                  required:
                  - id
                  - name
                  - image
                  - model
                  - price
                  - description
  "/api/v1/cars":
    post:
      summary: Admin can only create a new car
      tags:
      -  Create a New Car 
      parameters: []
      responses:
        '201':
          description: Car created 
        '401':
          description: Unauthorized, only Admin can create a new car
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                image:
                  type: string
                model:
                  type: string
                price:
                  type: integer
                description:
                  type: string
               
              required:
              - id
              - name
              - image
              - model
              - price
              - description
              
  "/api/v1/cars/{id}":
    delete:
      summary: Only admin can delete a car
      tags:
      -  Delete a car
      parameters:
      - name: id
        in: path
        description: Car ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Car deleted 
        '401':
          description: Only admin can delete car
        '404':
          description: Car not found
        '422':
          description: Ivalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                image:
                  type: string
                model:
                  type: string
                price:
                  type: integer
                description:
                  type: string
              required:
              - id
              - name
              - image
              - model
              - price
              - description
              
    get:
      summary: List Specific Car
      tags:
      - Detail page for specific car
      parameters:
      - name: id
        in: path
        description: Car ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Single car id displayed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  image:
                    type: string
                  model:
                    type: string
                  price:
                    type: integer
                  description:
                    type: string
                required:
                - id
                - name
                - image
                - model
                - price
                - description
                
  "/api/v1/users/{user_id}/reservations":
    get:
      summary: Get user car reservations
      tags:
      - Display all users reservations
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Display car reservation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    reservation_date:
                      type: datetime
                    returning_date:
                      type: datetime
                    car:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        image:
                          type: string
                        model:
                          type: string
                        price:
                          type: integer
                        description:
                          type: string
                      required:
                      - id
                      - name
                      - image
                      - model
                      - price
                      - description
                  required:
                  - id
                  - reservation_date
                  - returning_date
                  - car
        '401':
          description: You must Login or Register.
    post:
      summary: Reserve A car
      tags:
      - Create Car Reservation
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Reservation created
        '401':
          description: You need to Sign in before continuing
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_date:
                  type: datetime
                returning_date:
                  type: datetime
                car_id:
                  type: integer
              required:
              - reservation_date
              - returning_date
              - car_id
  "/api/v1/users/{user_id}/reservations/{id}":
    delete:
      summary: Delete Car Reservation
      tags:
      - Delete a car reservation
      parameters:
      - name: user_id
        in: path
        description: Current User ID
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: Reservation ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Reservation deleted successfully
        '401':
          description: You need to Sign in before continuing
        '404':
          description: Could not find reservation with specific id

servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: https://localhost:3000/api/v1
